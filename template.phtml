<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Telegram Proxy Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/qrcodejs@1.0.0/qrcode.min.js"></script>
    <style>
        /* Shimmer animation for skeleton loaders */
        @keyframes shimmer { 0% { background-position: -1000px 0; } 100% { background-position: 1000px 0; } }
        .animate-shimmer {
            animation: shimmer 2s infinite linear;
            background: linear-gradient(to right, #e5e7eb 4%, #f9fafb 25%, #e5e7eb 36%);
            background-size: 1000px 100%;
        }
        .dark .animate-shimmer {
            background: linear-gradient(to right, #374151 4%, #4b5563 25%, #374151 36%);
        }
        /* Other minor styles */
        #qr-modal.visible { opacity: 1; visibility: visible; }
        #qr-modal { opacity: 0; visibility: hidden; transition: opacity 0.3s ease, visibility 0.3s ease; }
    </style>
</head>
<body class="bg-gray-100 dark:bg-gray-900 text-gray-900 dark:text-gray-100 min-h-screen font-sans">
    <div class="container max-w-3xl mx-auto px-4 py-6 md:py-12">
        <header class="text-center mb-8 md:mb-10">
            <h1 class="text-3xl md:text-5xl font-extrabold mb-2 text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-teal-400">Proxy Dashboard</h1>
            <p class="text-base md:text-lg text-gray-600 dark:text-gray-400">Click below to test connection speed from your device.</p>
        </header>

        <div class="controls-bar bg-white/70 dark:bg-gray-800/70 backdrop-blur-sm sticky top-4 z-10 p-4 rounded-xl border border-gray-200 dark:border-gray-700 flex flex-col gap-4 mb-8 shadow-lg">
            <div class="flex flex-col md:flex-row gap-4 items-center justify-between">
                <button id="recheck-btn" class="w-full md:w-auto px-5 py-2.5 rounded-lg text-white font-semibold bg-blue-600 hover:bg-blue-700 transition-all duration-300 shadow-md hover:shadow-lg disabled:opacity-60 disabled:cursor-wait disabled:shadow-none flex items-center justify-center gap-2">
                    <svg id="recheck-icon-play" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M8 5.25a.75.75 0 011.5 0v2.755a3 3 0 011.775 5.495l-1.99 1.149A.75.75 0 018 14.205V5.25z"></path><path d="M9 3a.75.75 0 01.75.75v.01a.75.75 0 01-1.5 0V3.75A.75.75 0 019 3zM12.25 4.5a.75.75 0 00-1.06-1.06l-.01.01a.75.75 0 001.06 1.06l.01-.01zM15 6.75a.75.75 0 01.75-.75h.01a.75.75 0 010 1.5H15.75a.75.75 0 01-.75-.75zM12.25 10.5a.75.75 0 00-1.06 1.06l.01.01a.75.75 0 001.06-1.06l-.01-.01zM9 12a.75.75 0 01.75.75v.01a.75.75 0 01-1.5 0V12.75A.75.75 0 019 12zM5.75 10.5a.75.75 0 00-1.06-1.06l-.01.01a.75.75 0 101.06 1.06l.01-.01zM3 6.75a.75.75 0 01.75-.75h.01a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM5.75 4.5a.75.75 0 00-1.06 1.06l.01-.01a.75.75 0 001.06-1.06l-.01.01z"></path></svg>
                    <span id="recheck-btn-text">Test My Connection</span>
                </button>
                <div id="list-status" class="list-status text-gray-600 dark:text-gray-400 text-sm font-medium text-center md:text-right">Showing initial server status.</div>
            </div>
            <div id="progress-container" class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5 hidden">
                <div id="progress-bar" class="bg-gradient-to-r from-blue-500 to-teal-400 h-2.5 rounded-full transition-all duration-300" style="width: 0%"></div>
            </div>
        </div>

        <div id="proxy-list-container" class="grid gap-4">
            <?php foreach ($proxies as $proxy): ?>
                <?php
                    $tgUrl = htmlspecialchars($proxy['tg_url']);
                    $server = htmlspecialchars($proxy['server']);
                    $port = htmlspecialchars($proxy['port']);
                    $isOnline = $proxy['status'] === 'Online';
                ?>
                <div class="proxy-card bg-white dark:bg-gray-800 rounded-xl shadow-md border dark:border-gray-700 flex flex-col gap-3 p-3 md:p-4 hover:shadow-lg hover:border-blue-500/50 transition-all duration-300 <?= !$isOnline ? 'opacity-60 grayscale' : '' ?> <?= $isOnline ? 'is-online border-gray-200' : 'border-transparent' ?>" 
                     data-server="<?= $server ?>" data-port="<?= $port ?>" data-url="<?= $tgUrl ?>" data-latency="<?= $proxy['latency'] ?? '99999' ?>">
                    
                    <!-- Top Section: Status & Server Info -->
                    <div class="flex justify-between items-center gap-3">
                        <span class="status-badge inline-flex items-center space-x-2 px-3 py-1 text-xs font-bold rounded-full <?= $isOnline ? 'bg-green-100 text-green-700 dark:bg-green-500/20 dark:text-green-300' : 'bg-red-100 text-red-700 dark:bg-red-500/20 dark:text-red-300' ?>">
                            <?= $proxy['status'] ?>
                        </span>
                        <div class="font-mono text-sm text-gray-700 dark:text-gray-300 text-right truncate">
                           <strong class="text-gray-900 dark:text-gray-100"><?= $server ?></strong>:<?= $port ?>
                        </div>
                    </div>

                    <!-- Divider -->
                    <hr class="border-gray-200 dark:border-gray-700/50">

                    <!-- Middle Section: Latency -->
                    <div class="flex justify-between items-center h-8">
                        <div class="text-sm font-semibold text-gray-500 dark:text-gray-400">Connection Speed</div>
                        <div class="ping-display text-right">
                             <?php if ($isOnline): ?>
                                <div class="text-lg md:text-xl font-bold text-gray-800 dark:text-gray-100">
                                    <span class="ping-value"><?= $proxy['latency'] ?></span><span class="text-sm font-medium">ms</span>
                                </div>
                                <div class="ping-source text-xs text-gray-400">from server</div>
                            <?php else: ?>
                                <div class="text-lg md:text-xl font-bold text-gray-400 dark:text-gray-600">--</div>
                            <?php endif; ?>
                        </div>
                    </div>

                    <!-- Bottom Section: Actions -->
                    <div class="proxy-actions flex gap-2 pt-1">
                        <a href="<?= $tgUrl ?>" class="action-btn connect-btn flex-1 text-center px-3 py-2 rounded-md text-white text-sm font-semibold flex items-center justify-center gap-1.5 <?= $isOnline ? 'bg-green-600 hover:bg-green-700' : 'bg-gray-400 dark:bg-gray-600 cursor-not-allowed' ?> transition-colors">Connect</a>
                        <button class="action-btn copy-btn flex-1 text-center px-3 py-2 rounded-md text-white text-sm font-semibold flex items-center justify-center gap-1.5 bg-blue-500 hover:bg-blue-600 transition-colors">Copy</button>
                        <button class="action-btn qr-btn flex-none p-2 rounded-md text-white text-sm font-semibold bg-gray-500 hover:bg-gray-600 transition-colors">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path d="M2.5 2.5a.5.5 0 01.5-.5h2.5a.5.5 0 010 1H3V5a.5.5 0 01-1 0V2.5zM17.5 2.5a.5.5 0 00-.5-.5h-2.5a.5.5 0 000 1H17V5a.5.5 0 001 0V2.5zM2.5 17.5a.5.5 0 00.5.5h2.5a.5.5 0 000-1H3V15a.5.5 0 00-1 0v2.5zM17.5 17.5a.5.5 0 01-.5.5h-2.5a.5.5 0 010-1H17V15a.5.5 0 011 0v2.5z"></path><path fill-rule="evenodd" d="M5 5h10v10H5V5zm1-1a1 1 0 00-1 1v10a1 1 0 001 1h10a1 1 0 001-1V5a1 1 0 00-1-1H6z"></path><path d="M8 8h4v4H8V8z"></path></svg>
                        </button>
                    </div>
                </div>
            <?php endforeach; ?>
        </div>
    </div>
    
    <div id="qr-modal" class="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-70 backdrop-blur-sm">
        <div class="modal-content bg-white dark:bg-gray-800 p-6 rounded-2xl text-center"><h3 class="text-xl font-semibold mb-4">Scan with Telegram</h3><div id="qrcode-container"></div></div>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", () => {
        const proxyListContainer = document.getElementById("proxy-list-container");
        const listStatus = document.getElementById("list-status");
        const recheckBtn = document.getElementById("recheck-btn");
        const recheckBtnText = document.getElementById("recheck-btn-text");
        const progressContainer = document.getElementById('progress-container');
        const progressBar = document.getElementById('progress-bar');
        const onlineCards = Array.from(document.querySelectorAll('.proxy-card.is-online'));
        const CLIENT_CHECK_TIMEOUT = 3000;

        function checkProxyLatency(server, port) {
            return new Promise(resolve => {
                const controller = new AbortController();
                const signal = controller.signal;
                const startTime = performance.now();
                const timer = setTimeout(() => { controller.abort(); resolve(null); }, CLIENT_CHECK_TIMEOUT);
                fetch(`http://${server}:${port}`, { mode: 'no-cors', signal, cache: 'no-store' })
                    .catch(() => {})
                    .finally(() => { clearTimeout(timer); resolve(performance.now() - startTime); });
            });
        }
        
        function setCardToSkeleton(card) {
            const pingDisplay = card.querySelector('.ping-display');
            if (pingDisplay) pingDisplay.innerHTML = `<div class="h-5 w-16 ml-auto rounded-md animate-shimmer"></div><div class="h-3 w-10 ml-auto mt-1 rounded-md animate-shimmer"></div>`;
        }

        function updateCardLatency(card, latency) {
            const pingDisplay = card.querySelector('.ping-display');
            card.dataset.latency = latency;
            pingDisplay.innerHTML = `
                <div class="text-lg md:text-xl font-bold text-gray-800 dark:text-gray-100">
                    <span class="ping-value">${Math.round(latency)}</span><span class="text-sm font-medium">ms</span>
                </div>
                <div class="ping-source text-xs text-blue-500 font-semibold">from you</div>`;
        }

        function sortCards() {
            const cards = Array.from(proxyListContainer.querySelectorAll(".proxy-card"));
            cards.sort((a, b) => {
                const latencyA = parseInt(a.dataset.latency, 10);
                const latencyB = parseInt(b.dataset.latency, 10);
                return latencyA - latencyB;
            });
            cards.forEach(card => proxyListContainer.appendChild(card));
        }

        async function runAllClientChecks() {
            if (onlineCards.length === 0) {
                listStatus.textContent = "No online proxies to test.";
                return;
            }

            recheckBtn.disabled = true;
            recheckBtnText.textContent = "Testing...";
            progressContainer.classList.remove('hidden');
            progressBar.style.width = '0%';

            onlineCards.forEach(setCardToSkeleton);
            
            let checkedCount = 0;
            const promises = onlineCards.map(async (card) => {
                const latency = await checkProxyLatency(card.dataset.server, card.dataset.port);
                if (latency !== null) updateCardLatency(card, latency);
                checkedCount++;
                const percent = (checkedCount / onlineCards.length) * 100;
                progressBar.style.width = `${percent}%`;
            });

            await Promise.all(promises);

            listStatus.textContent = "Sorting results by speed...";
            sortCards();
            setTimeout(() => {
                listStatus.textContent = `Finished. Best proxies for you are at the top.`;
                recheckBtn.disabled = false;
                recheckBtnText.textContent = "Test Again";
            }, 500);
        }

        recheckBtn.addEventListener('click', runAllClientChecks);
        if (onlineCards.length === 0) {
            recheckBtn.disabled = true;
            recheckBtnText.textContent = "No Proxies to Test";
        }

        proxyListContainer.addEventListener('click', (e) => {
            const copyBtn = e.target.closest('.copy-btn');
            if(copyBtn) {
                navigator.clipboard.writeText(copyBtn.closest('.proxy-card').dataset.url);
                const originalText = copyBtn.textContent;
                copyBtn.textContent = 'Copied!';
                copyBtn.classList.add('!bg-green-500');
                setTimeout(() => { copyBtn.textContent = originalText; copyBtn.classList.remove('!bg-green-500'); }, 1500);
            }
            const qrBtn = e.target.closest('.qr-btn');
            if(qrBtn) {
                const qrModal = document.getElementById('qr-modal');
                const qrContainer = document.getElementById('qrcode-container');
                qrContainer.innerHTML = '';
                new QRCode(qrContainer, { text: qrBtn.closest('.proxy-card').dataset.url, width: 220, height: 220 });
                qrModal.classList.add('visible');
            }
        });
        document.getElementById('qr-modal').addEventListener('click', (e) => {
            if (e.target.id === 'qr-modal') e.target.classList.remove('visible');
        });
    });
    </script>
</body>
</html>
